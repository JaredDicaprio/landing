{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/everpay/Documents/GitHub/Kwikpay/landing/packages/landing/containers/AgencyModern/UpdateScreen/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-icons-kit';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from 'rc-tabs/lib/TabContent';\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\nimport 'rc-tabs/assets/index.css';\nimport Box from 'common/src/components/Box';\nimport Text from 'common/src/components/Text';\nimport Heading from 'common/src/components/Heading';\nimport Image from 'common/src/components/Image';\nimport Container from 'common/src/components/UI/Container';\nimport TiltShape from '../TiltShape';\nimport SectionWrapper from './updateScreen.style';\nimport { SCREENSHOTS } from 'common/src/data/SaasModern';\n\nvar UpdateScreen = function UpdateScreen(_ref) {\n  var sectionWrapper = _ref.sectionWrapper,\n      secTitleWrapper = _ref.secTitleWrapper,\n      secText = _ref.secText,\n      secHeading = _ref.secHeading;\n  return __jsx(Box, _extends({}, sectionWrapper, {\n    as: \"section\",\n    id: \"developers_section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(TiltShape, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Box, _extends({}, secTitleWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(Heading, _extends({}, secHeading, {\n    content: \"Super simple APIs that  you can build on\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })), __jsx(Text, _extends({}, secText, {\n    content: \"See why so many developers love to dabble in our sandbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 2\n    }\n  }))), __jsx(Tabs, {\n    renderTabBar: function renderTabBar() {\n      return __jsx(ScrollableInkTabBar, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 31\n        }\n      });\n    },\n    renderTabContent: function renderTabContent() {\n      return __jsx(TabContent, {\n        animated: false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 35\n        }\n      });\n    },\n    className: \"update-screen-tab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, SCREENSHOTS.map(function (item, index) {\n    return __jsx(TabPane, {\n      forceRender: true,\n      tab: __jsx(React.Fragment, null, __jsx(Icon, {\n        icon: item.icon,\n        size: 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }), item.title),\n      key: index + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(Image, {\n      src: item.image,\n      alt: \"screenshot-\".concat(index + 1),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }));\n  }))));\n};\n\n_c = UpdateScreen;\nUpdateScreen.propTypes = {\n  secTitleWrapper: PropTypes.object,\n  secText: PropTypes.object,\n  secHeading: PropTypes.object\n};\nUpdateScreen.defaultProps = {\n  secWrapper: {\n    mt: ['100px', '80px'],\n    mb: ['60px', '80px']\n  },\n  secTitleWrapper: {\n    mb: ['60px', '80px']\n  },\n  secText: {\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '18px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#fff',\n    mb: '5px'\n  },\n  secHeading: {\n    textAlign: 'center',\n    fontSize: ['48px', '48px'],\n    fontWeight: '600',\n    color: '#fff',\n    letterSpacing: '-0.025em',\n    mb: '0',\n    lineHeight: '1.87'\n  }\n};\nexport default UpdateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateScreen\");","map":{"version":3,"sources":["/Users/everpay/Documents/GitHub/Kwikpay/landing/packages/landing/containers/AgencyModern/UpdateScreen/index.js"],"names":["React","PropTypes","Icon","Tabs","TabPane","TabContent","ScrollableInkTabBar","Box","Text","Heading","Image","Container","TiltShape","SectionWrapper","SCREENSHOTS","UpdateScreen","sectionWrapper","secTitleWrapper","secText","secHeading","map","item","index","icon","title","image","propTypes","object","defaultProps","secWrapper","mt","mb","as","display","textAlign","fontSize","letterSpacing","fontWeight","color","lineHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-icons-kit';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from 'rc-tabs/lib/TabContent';\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\nimport 'rc-tabs/assets/index.css';\nimport Box from 'common/src/components/Box';\nimport Text from 'common/src/components/Text';\nimport Heading from 'common/src/components/Heading';\nimport Image from 'common/src/components/Image';\nimport Container from 'common/src/components/UI/Container';\nimport TiltShape from '../TiltShape';\n\nimport SectionWrapper from './updateScreen.style';\nimport { SCREENSHOTS } from 'common/src/data/SaasModern';\n\nconst UpdateScreen = ({ sectionWrapper, secTitleWrapper, secText, secHeading }) => {\n  return (\n      <Box {...sectionWrapper} as=\"section\" id=\"developers_section\">\n      <TiltShape />\n      <Container>\n        <Box {...secTitleWrapper}>\n          <Heading {...secHeading} content=\"Super simple APIs that  you can build on\" />\n <Text {...secText} content=\"See why so many developers love to dabble in our sandbox\" />\n        </Box>\n        <Tabs\n          renderTabBar={() => <ScrollableInkTabBar />}\n          renderTabContent={() => <TabContent animated={false} />}\n          className=\"update-screen-tab\"\n        >\n          {SCREENSHOTS.map((item, index) => (\n            <TabPane\n              forceRender={true}\n              tab={\n                <>\n                  <Icon icon={item.icon} size={24} />\n                  {item.title}\n                </>\n              }\n              key={index + 1}\n            >\n              <Image src={item.image} alt={`screenshot-${index + 1}`} />\n            </TabPane>\n          ))}\n        </Tabs>\n      </Container>\n    </Box>\n  );\n};\n\nUpdateScreen.propTypes = {\n  secTitleWrapper: PropTypes.object,\n  secText: PropTypes.object,\n  secHeading: PropTypes.object,\n};\n\nUpdateScreen.defaultProps = {\n secWrapper: {\n    mt: ['100px', '80px'],\n    mb: ['60px', '80px'],\n  },\n secTitleWrapper: {\n    mb: ['60px', '80px'],\n  },\n  secText: {\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '18px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#fff',\n    mb: '5px',\n  },\n  secHeading: {\n    textAlign: 'center',\n    fontSize: ['48px', '48px'],\n    fontWeight: '600',\n    color: '#fff',\n    letterSpacing: '-0.025em',\n    mb: '0',\n    lineHeight: '1.87',\n  },\n};\n\nexport default UpdateScreen;\n"]},"metadata":{},"sourceType":"module"}