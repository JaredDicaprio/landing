{"ast":null,"code":"var _jsxFileName = \"/Users/everpay/Documents/GitHub/Kwikpay/landing/node_modules/common/src/components/Select/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport ReactSelect from 'react-select';\nimport PropTypes from 'prop-types';\nimport SelectStyle from './select.style';\n\nconst Select = (_ref) => {\n  let {\n    className,\n    labelText,\n    labelPosition\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"labelText\", \"labelPosition\"]);\n\n  // Add all classes to an array\n  const addAllClasses = ['reusecore__select']; // Add label position class\n\n  if (labelPosition) {\n    addAllClasses.push(`label_${labelPosition}`);\n  } // className prop checking\n\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  const LabelField = labelText && __jsx(\"span\", {\n    className: \"reusecore__field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, labelText);\n\n  const position = labelPosition || 'top';\n  return __jsx(SelectStyle, {\n    className: addAllClasses.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, position === 'left' || position === 'right' || position === 'top' ? LabelField : '', __jsx(ReactSelect, _extends({\n    className: \"select-field__wrapper\",\n    classNamePrefix: \"select\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), position === 'bottom' && LabelField);\n};\n\nSelect.propTypes = {\n  /** You can add your custom class for select wrapper component.\n   * note: We manualy add react-select className and classNamePrefix props value */\n  className: PropTypes.string,\n\n  /** labelText of the select field */\n  labelText: PropTypes.string,\n\n  /** Set label position of the select field. By default it's top */\n  labelPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n};\nSelect.defaultProps = {\n  as: 'div',\n  labelPosition: 'top'\n};\nexport default Select;","map":{"version":3,"sources":["/Users/everpay/Documents/GitHub/Kwikpay/landing/node_modules/common/src/components/Select/index.js"],"names":["React","ReactSelect","PropTypes","SelectStyle","Select","className","labelText","labelPosition","props","addAllClasses","push","LabelField","position","join","propTypes","string","oneOf","defaultProps","as"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,MAAM,GAAG,UAAuD;AAAA,MAAtD;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAsD;AAAA,MAAZC,KAAY;;AACpE;AACA,QAAMC,aAAa,GAAG,CAAC,mBAAD,CAAtB,CAFoE,CAIpE;;AACA,MAAIF,aAAJ,EAAmB;AACjBE,IAAAA,aAAa,CAACC,IAAd,CAAoB,SAAQH,aAAc,EAA1C;AACD,GAPmE,CASpE;;;AACA,MAAIF,SAAJ,EAAe;AACbI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACD;;AAED,QAAMM,UAAU,GAAGL,SAAS,IAC1B;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,SAA1C,CADF;;AAIA,QAAMM,QAAQ,GAAGL,aAAa,IAAI,KAAlC;AAEA,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEE,aAAa,CAACI,IAAd,CAAmB,GAAnB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAApC,IAA+CA,QAAQ,KAAK,KAA5D,GACGD,UADH,GAEG,EAHN,EAKE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,eAAe,EAAC;AAFlB,KAGMH,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,EAUGI,QAAQ,KAAK,QAAb,IAAyBD,UAV5B,CADF;AAcD,CAlCD;;AAoCAP,MAAM,CAACU,SAAP,GAAmB;AACjB;;AAEAT,EAAAA,SAAS,EAAEH,SAAS,CAACa,MAHJ;;AAKjB;AACAT,EAAAA,SAAS,EAAEJ,SAAS,CAACa,MANJ;;AAQjB;AACAR,EAAAA,aAAa,EAAEL,SAAS,CAACc,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAAhB;AATE,CAAnB;AAYAZ,MAAM,CAACa,YAAP,GAAsB;AACpBC,EAAAA,EAAE,EAAE,KADgB;AAEpBX,EAAAA,aAAa,EAAE;AAFK,CAAtB;AAKA,eAAeH,MAAf","sourcesContent":["import React from 'react';\nimport ReactSelect from 'react-select';\nimport PropTypes from 'prop-types';\nimport SelectStyle from './select.style';\n\nconst Select = ({ className, labelText, labelPosition, ...props }) => {\n  // Add all classes to an array\n  const addAllClasses = ['reusecore__select'];\n\n  // Add label position class\n  if (labelPosition) {\n    addAllClasses.push(`label_${labelPosition}`);\n  }\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  const LabelField = labelText && (\n    <span className=\"reusecore__field-label\">{labelText}</span>\n  );\n\n  const position = labelPosition || 'top';\n\n  return (\n    <SelectStyle className={addAllClasses.join(' ')}>\n      {position === 'left' || position === 'right' || position === 'top'\n        ? LabelField\n        : ''}\n\n      <ReactSelect\n        className=\"select-field__wrapper\"\n        classNamePrefix=\"select\"\n        {...props}\n      />\n      {position === 'bottom' && LabelField}\n    </SelectStyle>\n  );\n};\n\nSelect.propTypes = {\n  /** You can add your custom class for select wrapper component.\n   * note: We manualy add react-select className and classNamePrefix props value */\n  className: PropTypes.string,\n\n  /** labelText of the select field */\n  labelText: PropTypes.string,\n\n  /** Set label position of the select field. By default it's top */\n  labelPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n};\n\nSelect.defaultProps = {\n  as: 'div',\n  labelPosition: 'top',\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}