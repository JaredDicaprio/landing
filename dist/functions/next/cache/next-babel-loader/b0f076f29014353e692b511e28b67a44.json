{"ast":null,"code":"var _jsxFileName = \"/Users/everpay/Documents/GitHub/Kwikpay/landing/packages/landing/containers/AgencyModern/UpdateScreen/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-icons-kit';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from 'rc-tabs/lib/TabContent';\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\nimport 'rc-tabs/assets/index.css';\nimport Box from 'common/src/components/Box';\nimport Text from 'common/src/components/Text';\nimport Heading from 'common/src/components/Heading';\nimport Image from 'common/src/components/Image';\nimport Container from 'common/src/components/UI/Container';\nimport TiltShape from '../TiltShape';\nimport SectionWrapper from './updateScreen.style';\nimport { SCREENSHOTS } from 'common/src/data/SaasModern';\n\nconst UpdateScreen = ({\n  secTitleWrapper,\n  secText,\n  secHeading\n}) => {\n  return __jsx(SectionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(TiltShape, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Box, _extends({}, secTitleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(Text, _extends({}, secText, {\n    content: \"UPDATE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })), __jsx(Heading, _extends({}, secHeading, {\n    content: \"Meet our new updated screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }))), __jsx(Tabs, {\n    renderTabBar: () => __jsx(ScrollableInkTabBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }),\n    renderTabContent: () => __jsx(TabContent, {\n      animated: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 35\n      }\n    }),\n    className: \"update-screen-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, SCREENSHOTS.map((item, index) => __jsx(TabPane, {\n    forceRender: true,\n    tab: __jsx(React.Fragment, null, __jsx(Icon, {\n      icon: item.icon,\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }), item.title),\n    key: index + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    src: item.image,\n    alt: `screenshot-${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nUpdateScreen.propTypes = {\n  secTitleWrapper: PropTypes.object,\n  secText: PropTypes.object,\n  secHeading: PropTypes.object\n};\nUpdateScreen.defaultProps = {\n  secTitleWrapper: {\n    mb: ['60px', '80px']\n  },\n  secText: {\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '14px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#fff',\n    mb: '5px'\n  },\n  secHeading: {\n    textAlign: 'center',\n    fontSize: ['20px', '24px'],\n    fontWeight: '500',\n    color: '#fff',\n    letterSpacing: '-0.025em',\n    mb: '0',\n    lineHeight: '1.67'\n  }\n};\nexport default UpdateScreen;","map":{"version":3,"sources":["/Users/everpay/Documents/GitHub/Kwikpay/landing/packages/landing/containers/AgencyModern/UpdateScreen/index.js"],"names":["React","PropTypes","Icon","Tabs","TabPane","TabContent","ScrollableInkTabBar","Box","Text","Heading","Image","Container","TiltShape","SectionWrapper","SCREENSHOTS","UpdateScreen","secTitleWrapper","secText","secHeading","map","item","index","icon","title","image","propTypes","object","defaultProps","mb","as","display","textAlign","fontSize","letterSpacing","fontWeight","color","lineHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-icons-kit';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from 'rc-tabs/lib/TabContent';\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\nimport 'rc-tabs/assets/index.css';\nimport Box from 'common/src/components/Box';\nimport Text from 'common/src/components/Text';\nimport Heading from 'common/src/components/Heading';\nimport Image from 'common/src/components/Image';\nimport Container from 'common/src/components/UI/Container';\nimport TiltShape from '../TiltShape';\n\nimport SectionWrapper from './updateScreen.style';\nimport { SCREENSHOTS } from 'common/src/data/SaasModern';\n\nconst UpdateScreen = ({ secTitleWrapper, secText, secHeading }) => {\n  return (\n    <SectionWrapper>\n      <TiltShape />\n      <Container>\n        <Box {...secTitleWrapper}>\n          <Text {...secText} content=\"UPDATE\" />\n          <Heading {...secHeading} content=\"Meet our new updated screen\" />\n        </Box>\n        <Tabs\n          renderTabBar={() => <ScrollableInkTabBar />}\n          renderTabContent={() => <TabContent animated={false} />}\n          className=\"update-screen-tab\"\n        >\n          {SCREENSHOTS.map((item, index) => (\n            <TabPane\n              forceRender={true}\n              tab={\n                <>\n                  <Icon icon={item.icon} size={24} />\n                  {item.title}\n                </>\n              }\n              key={index + 1}\n            >\n              <Image src={item.image} alt={`screenshot-${index + 1}`} />\n            </TabPane>\n          ))}\n        </Tabs>\n      </Container>\n    </SectionWrapper>\n  );\n};\n\nUpdateScreen.propTypes = {\n  secTitleWrapper: PropTypes.object,\n  secText: PropTypes.object,\n  secHeading: PropTypes.object,\n};\n\nUpdateScreen.defaultProps = {\n  secTitleWrapper: {\n    mb: ['60px', '80px'],\n  },\n  secText: {\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '14px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#fff',\n    mb: '5px',\n  },\n  secHeading: {\n    textAlign: 'center',\n    fontSize: ['20px', '24px'],\n    fontWeight: '500',\n    color: '#fff',\n    letterSpacing: '-0.025em',\n    mb: '0',\n    lineHeight: '1.67',\n  },\n};\n\nexport default UpdateScreen;\n"]},"metadata":{},"sourceType":"module"}